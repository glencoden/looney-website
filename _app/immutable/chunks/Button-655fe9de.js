import{S as w,i as _,s as y,d as v,v as b,n as g,x as p,p as B,q as C,y as k,l as m,r as E,J as u,w as A,g as P,K as j,P as S,Q as z,z as N,F as h}from"./index-331e172c.js";const O="src/components/Button.svelte";function d(n){let e,o=n[2].toUpperCase()+"",l,f,a;const r={c:function(){e=g("button"),l=p(o),this.h()},l:function(s){e=B(s,"BUTTON",{class:!0});var c=C(e);l=k(c,o),c.forEach(m),this.h()},h:function(){E(e,"class","button s-NMyTiX1zi6rz"),u(e,"primary-color",!n[0]),u(e,"secondary-color",n[0]),u(e,"button-active",n[1]),A(e,O,7,0,154)},m:function(s,c){P(s,e,c),j(e,l),f||(a=S(e,"click",function(){z(typeof n[3]=="function"&&n[3]())&&(typeof n[3]=="function"&&n[3]()).apply(this,arguments)},!1,!1,!1),f=!0)},p:function(s,[c]){n=s,c&4&&o!==(o=n[2].toUpperCase()+"")&&N(l,o),c&1&&u(e,"primary-color",!n[0]),c&1&&u(e,"secondary-color",n[0]),c&2&&u(e,"button-active",n[1])},i:h,o:h,d:function(s){s&&m(e),f=!1,a()}};return v("SvelteRegisterBlock",{block:r,id:d.name,type:"component",source:"",ctx:n}),r}function T(n,e,o){let{$$slots:l={},$$scope:f}=e;b("Button",l,[]);let{secondary:a=!1}=e,{isActive:r=!1}=e,{label:i="no label"}=e,{onClick:s=void 0}=e;const c=["secondary","isActive","label","onClick"];return Object.keys(e).forEach(t=>{!~c.indexOf(t)&&t.slice(0,2)!=="$$"&&t!=="slot"&&console.warn(`<Button> was created with unknown prop '${t}'`)}),n.$$set=t=>{"secondary"in t&&o(0,a=t.secondary),"isActive"in t&&o(1,r=t.isActive),"label"in t&&o(2,i=t.label),"onClick"in t&&o(3,s=t.onClick)},n.$capture_state=()=>({secondary:a,isActive:r,label:i,onClick:s}),n.$inject_state=t=>{"secondary"in t&&o(0,a=t.secondary),"isActive"in t&&o(1,r=t.isActive),"label"in t&&o(2,i=t.label),"onClick"in t&&o(3,s=t.onClick)},e&&"$$inject"in e&&n.$inject_state(e.$$inject),[a,r,i,s]}class q extends w{constructor(e){super(e),_(this,e,T,d,y,{secondary:0,isActive:1,label:2,onClick:3}),v("SvelteRegisterComponent",{component:this,tagName:"Button",options:e,id:d.name})}get secondary(){throw new Error("<Button>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set secondary(e){throw new Error("<Button>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get isActive(){throw new Error("<Button>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set isActive(e){throw new Error("<Button>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get label(){throw new Error("<Button>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set label(e){throw new Error("<Button>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get onClick(){throw new Error("<Button>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set onClick(e){throw new Error("<Button>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}export{q as B};
